datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @unique
  email String @unique

  file    File[]
  message Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id") //map renames the column_name
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  DONE
  FAILED
}

model File {
  id   String @id @default(uuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url String
  key String

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  message Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Message {
  id      String @id @default(cuid())
  message String @db.Text

  isUserMessage Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  File   File?   @relation(fields: [fileId], references: [id])
  fileId String?
}
